READ:
	PUSH 2
	LCALL UART_INIT
	MOV R2,#0
	
REC: 
	LCALL UART_REC
	CJNE R2,#1,NOTFIRST
	CJNE A,#'1',NOTSTUDENT
	CLR P2.2
	LCALL WAIT_MES
	LCALL DEALY_5
	SJMP REC
	
NOTSTUDENT:
	CJNE A,#'3',VAILD
	CLR P2.0
	LCALL DEALY_5
	CPL P2.0
	POP 2
	RET
VAILD:
	CLR P2.3
	LCALL DEALY_5
	
	SJMP NOTFIRST
	
NOTFIRST:
	CJNE R2, #2,MNAME
	LCALL PRINT_SCREEN
	CJNE A,#'1',SCREEN2
	MOV R1,#0
	MOV R0,#7
	ACALL LCD1602_SETCURSOR
	MOV A,#'1'
	ACALL DATAWRT
	LJMP REC
	
SCREEN2:
	CJNE A,#'2',SCREEN3
	MOV R1,#0
	MOV R0,#7
	ACALL LCD1602_SETCURSOR
	MOV A,#'2'
	ACALL DATAWRT
	LJMP REC
	
SCREEN3:
	CJNE A,#'3',MNAME
	MOV R1,#0
	MOV R0,#7
	ACALL LCD1602_SETCURSOR
	MOV A,#'3'
	ACALL DATAWRT
	LJMP REC

MNAME:
	MOV B,R2
	MOV R1,#1
	DEC B
	DEC B
	DEC B
	MOV 36H,B
	MOV R0,36H
	ACALL LCD1602_SETCURSOR
	ACALL DATAWRT
	CJNE R2,#18,NEXT
	POP 2
	RET
NEXT:
	JNC OUT
	LJMP REC
OUT: 
   LCALL DEALY_5
   POP 2
   RET
	

PRINT_SCREEN:
	PUSH ACC
	ACALL LCD1602_INIT
	ACALL LCD1602_CLEAR
	
	MOV R1,#0
	MOV R0,#0
	ACALL LCD1602_SETCURSOR
	MOV A,#'S';
	ACALL DATAWRT
	
	MOV R1,#0
	MOV R0,#1
	ACALL LCD1602_SETCURSOR
	MOV A,#'c';
	ACALL DATAWRT
	
	MOV R1,#0
	MOV R0,#2
	ACALL LCD1602_SETCURSOR
	MOV A,#'r';
	ACALL DATAWRT
	
	MOV R1,#0
	MOV R0,#3
	ACALL LCD1602_SETCURSOR
	MOV A,#'e';
	ACALL DATAWRT
	
	MOV R1,#0
	MOV R0,#4
	ACALL LCD1602_SETCURSOR
	MOV A,#'e';
	ACALL DATAWRT
	
	MOV R1,#0
	MOV R0,#5
	ACALL LCD1602_SETCURSOR
	MOV A,#'n';
	ACALL DATAWRT
	
	POP ACC
	RET